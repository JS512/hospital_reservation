<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.hospital.dao.MemberDao">

	<select id="getOne" parameterType="long" resultMap="Member">
		SELECT *
		FROM member
		WHERE id = #{loginedMemberId}
	</select>
	
	<select id="getMatchedOne" parameterType="Map"
		resultMap="Member">
		SELECT *
		FROM member
		WHERE loginId = #{loginId}
		AND loginPw =	
		#{loginPw}
		AND delStatus = 0
	</select>
	
	<select id="doubleCheck" parameterType="map"
		resultType="Integer">
		SELECT COUNT(*) FROM `member`
		WHERE loginId = #{loginId} OR
		email = #{email}
	</select>
	
	<insert id="addMember" parameterType="map">
		INSERT INTO `member`
		SET
		regDate = NOW(),
		loginId = #{loginId},
		loginPw = #{loginPw},
		email = #{email},
		`name` = #{name},
		staffId = #{staffId},
		emailAuthKey = #{authKey}
	</insert>
	
	<update id="update" parameterType="map">
		UPDATE member
		<set>
			<if test="email != null">email = #{email}</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<update id="updatepassword" parameterType="map">
		UPDATE member
		<set>
			<if test="newloginPw != null">loginPw = #{newloginPw}</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="searchId" parameterType="Map" resultMap="Member">
		SELECT *
		FROM
		member
		WHERE name = #{name}
		AND email = #{email}
	</select>

	<select id="searchPw" parameterType="Map" resultMap="Member">
		SELECT *
		FROM
		member
		WHERE name = #{name}
		AND loginId = #{loginId}
		AND email =
		#{email}
	</select>

	<select id="getEmailMember" parameterType="map"
		resultType="Member">
		SELECT * FROM `member`
		WHERE email = #{email}
		AND
		emailAuthKey =
		#{authKey}
	</select>
	
	<update id="updateAuthStatus" parameterType="map">
		UPDATE `member`
		SET
		emailAuthStatus = true
		WHERE email = #{email}
	</update>

	<update id="updateDelStatus" parameterType="map">
		UPDATE `member`
		SET
		delStatus = 1
		WHERE id = #{id}
	</update>
	
	<select id="getMemberRole" parameterType="long" resultType="string">
		SELECT attrVal FROM memberAttr
		WHERE attrName = 'role' AND memberId = #{loginedMemberId}
	</select>
	
	<select id="getAllMembers" parameterType="map" resultMap="Member">
		SELECT M.*, IFNULL(S.staffType, '일반 회원') AS staffType, IFNULL(D.name, '소속없음') AS deptName, IFNULL(C.name, '소속 없음') AS centerName
		FROM `member` AS M
		LEFT OUTER JOIN staff AS S
		ON S.id = M.staffId
		LEFT OUTER JOIN dept AS D
		ON D.id = S.deptId
		LEFT OUTER JOIN center AS C
		ON D.centerId = C.id
		WHERE delStatus != TRUE AND M.id != #{loginedMemberId}
	</select>
	
	<select id="getAllDepts" resultType="Dept">
		SELECT * FROM dept
	</select>
	
	<select id="getOneMemberWithStaffDept" parameterType="map" resultMap="Member">
		SELECT M.*, IFNULL(S.staffType, '일반 회원') AS staffType, S.deptId, IFNULL(D.name, '소속없음') AS deptName, IFNULL(C.name, '소속 없음') AS centerName
		FROM `member` AS M
		LEFT OUTER JOIN staff AS S
		ON S.id = M.staffId
		LEFT OUTER JOIN dept AS D
		ON D.id = S.deptId
		LEFT OUTER JOIN center AS C
		ON D.centerId = C.id
		WHERE delStatus != TRUE AND M.id = #{id}
	</select>
	
	<update id="updateMemberType" parameterType="map">
		UPDATE `member`
		SET staffId = #{staffId}
		WHERE id = #{id}
	</update>
	
	<insert id="addStaff" parameterType="map" useGeneratedKeys="true" keyProperty="staffId">
		INSERT INTO staff
		SET regDate = NOW(),
		name = #{name},
		staffType = #{staffType},
		deptId = #{deptId}
	</insert>
	
	<update id="updateStaff" parameterType="map">
		UPDATE staff
		SET regDate = NOW()
		<if test="staffType != null and staffType != ''">
			, staffType = #{staffType}
		</if>
		<if test="deptId != null and deptId != ''">
			, deptId = #{deptId}
		</if>
		WHERE id = #{staffId}
	</update>
	
	<delete id="deleteStaff" parameterType="map">
		DELETE FROM staff
		WHERE id = #{staffId}
	</delete>
	
	<resultMap type="com.sbs.hospital.dto.Member" id="Member">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="loginId" column="loginId" />
		<id property="loginPw" column="loginPw" />
		<id property="name" column="name" />
		<id property="email" column="email" />
		<id property="emailAuthKey" column="emailAuthKey" />
		<id property="emailAuthStatus" column="emailAuthStatus" />
		<id property="delStatus" column="delStatus" />
		<id property="permissionLevel" column="permissionLevel" />
		<id property="staffId" column="staffId" />
		<association property="extra" javaType="map">
			<id property="staffType" column="staffType"/>			
			<id property="deptName" column="deptName"/>
			<id property="deptId" column="deptId"/>
			<id property="centerName" column="centerName"/>			
		</association>
	</resultMap>
	
	<resultMap type="com.sbs.hospital.dto.Dept" id="Dept">
		<id property="id" column="id"/>
		<id property="regDate" column="regDate"/>
		<id property="name" column="name"/>
		<id property="centerId" column="centerId"/>
		<association property="extra" javaType="map">						
			<id property="centerName" column="centerName"/>						
		</association>
	</resultMap>
</mapper>